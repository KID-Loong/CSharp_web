#!/usr/bin/env bash
# -----------------------------------------------------------------------------
set -o errexit
set -o nounset
set -o pipefail
# -----------------------------------------------------------------------------
IMAGE_NAME="csharp-web:latest"

function run() {
    if [ "${1:-}" == "local" ]
    then
        build-local
    else
        build-docker
    fi
}

function build-local() {
    dotnet publish -c Release -o ./dist
}

function build-docker() {
    docker build \
        -f ./Docker/Dockerfile \
        -t "${IMAGE_NAME}" \
        .
}

function timed () {
    # Reset timer
    SECONDS=0
    SUCCESS=Y

    # Execute main run
    eval $@ && SUCCESS=Y || SUCCESS=N

    # Calculate elapsed time
    num=${SECONDS}
    min=0
    hour=0
    day=0
    if((num>59));then
        ((sec=num%60))
        ((num=num/60))
        if((num>59));then
            ((min=num%60))
            ((num=num/60))
            if((num>23));then
                ((hour=num%24))
                ((day=num/24))
            else
                ((hour=num))
            fi
        else
            ((min=num))
        fi
    else
        ((sec=num))
    fi

    local formatted=""
    [ "${sec}" == "0" ] || formatted="${sec} seconds"
    [ "${min}" == "0" ] || formatted="${min} mins, ${formatted}"
    [ "${day}" == "0" ] || formatted="${day} days, ${formatted}"
    [ "${formatted}"=="" ] || formatted=", (${num})"
    [ "${SUCCESS}" == "Y" ] && state="SUCCESS" || state="FAILED"
    printf " -----------------------------------------------------------------------------\n"
    printf " « [ ${state} ] ${formatted:-0s} « ${0} \n"
    printf " -----------------------------------------------------------------------------\n"
}

timed run "$@"